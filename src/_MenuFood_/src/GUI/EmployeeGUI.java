/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import adt.Node;
import adt.Queue;
import data.Order;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import logic.ServerConnection;




/**
 *
 * @author carov
 */


public class EmployeeGUI extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form EmployeeGUI
     */
    
    //Lista actualizable
    private DefaultListModel df = new DefaultListModel();
    
    //Cola de pedidos
    private Queue<Order> orderqueue;

    public EmployeeGUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //Creacion de Cola de Pedidos
         orderqueue = new Queue<Order>();
        
        //Inicio Servidor
        ServerConnection  sc = new ServerConnection();
        sc.addObserver(this);
        Thread t = new Thread(sc);
        t.start();
        
    }

    

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_orders = new javax.swing.JList<>();
        button_despachar = new javax.swing.JButton();
        button_detalles = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(42, 42, 42));

        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(238, 238, 238));
        jLabel2.setText("Pedidos pendientes:");

        list_orders.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        list_orders.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No hay ningun pedido" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list_orders);

        button_despachar.setBackground(new java.awt.Color(238, 238, 238));
        button_despachar.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        button_despachar.setForeground(new java.awt.Color(42, 42, 42));
        button_despachar.setText("Despachar Orden");
        button_despachar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_despacharActionPerformed(evt);
            }
        });

        button_detalles.setBackground(new java.awt.Color(238, 238, 238));
        button_detalles.setFont(new java.awt.Font("Showcard Gothic", 0, 10)); // NOI18N
        button_detalles.setForeground(new java.awt.Color(42, 42, 42));
        button_detalles.setText("Ver detalles");
        button_detalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_detallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_despachar)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_detalles)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_detalles))
                .addGap(18, 18, 18)
                .addComponent(button_despachar)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_despacharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_despacharActionPerformed
        // TODO add your handling code here:
        orderqueue.dequeue();
        updateOrderList();
        JOptionPane.showMessageDialog(rootPane, "Se ha despachado el pedido!", "Pedido despachado", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_button_despacharActionPerformed

    private void button_detallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_detallesActionPerformed
        // TODO add your handling code here:
        Order selectedOrder;
        selectedOrder = (Order) df.getElementAt(list_orders.getSelectedIndex());
        
        PendingOrdersGUI po = new PendingOrdersGUI();
        po.setVisible(true);
        po.loadDetails(selectedOrder);
    }//GEN-LAST:event_button_detallesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeGUI().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_despachar;
    private javax.swing.JButton button_detalles;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list_orders;
    // End of variables declaration//GEN-END:variables

    
    //-------------------------------------------------------------------------
    //                  FUNCIONES AUXILIARES
    //-------------------------------------------------------------------------
    
    public void updateOrderList(){
        Node temp = orderqueue.getHead();
        Order ordtemp;
        df.clear();
        while(temp != null){
            ordtemp = (Order) temp.data;
            df.addElement(ordtemp);
            temp = temp.next;
        }
        list_orders.setModel(df);
        
        if(orderqueue.isEmpty()) df.addElement("No hay pedidos pendientes");
        System.out.println("--- Lista de Ordenes Actualizada ---");
    }
    @Override
    public void update(Observable o, Object arg) {
        
        //Se agrega el pedido a la cola
        orderqueue.enqueue((Order) arg);
        
        //Se actualiza la lista
        updateOrderList();
    }

 

    
}
